# You can define a list of options that will be used in case the config file
# (~/.ffgo/config on Unix, %APPDATA%/FFGo/config on Windows) can't be found.
# That is in most situations at program's first start. Write every option on a
# separate line.
#
#
# Options shared with FlightGear:
# --aircraft=name               - Defaults to c172p if not set.
# --airport=ID                  - Defaults to BIKF if not set.
# --carrier=[name|ID]           - Works the same as in FG.
# --fg-root=path                - Works the same as in FG.
# --fg-scenery=path             - Works the same as in FG.
# --parkpos=name                - Works the same as in FG.
# --runway=rwy_no               - Works the same as in FG.
#
# Other FlightGear options can be added, but unlike the ones mentioned above,
# will not be filtered out and will be visible in the FFGo text window.
#
#
# FFGo specific options:
# AI_SCENARIOS=scenario_name    - List of scenario names (without xml
#                                 extension) separated by spaces.
# AIRCRAFT_DIR=directory        - Passed as --aircraft-dir to FlightGear. Used
#                                 to distinguish between identically-named
#                                 aircraft. If left empty, FFGo will use the
#                                 highest priority aircraft with the chosen
#                                 name, according to the order of aircraft
#                                 paths in FG_AIRCRAFT.
# ALREADY_PROPOSED_CHANGES=list - Comma-separated list of identifiers for
#                                 questions FFGo should normally ask at most
#                                 once to the user. The initial value for a
#                                 fresh configuration should be empty.
# APT_DATA_SOURCE=boolean       - 0 or 1 (defaults to 1). Select data source
#                                 where FFGo will be looking for information
#                                 about parking positions. 0 tells FFGo to
#                                 look into FG_ROOT/AI/Airports (for FlightGear
#                                 2.4.0 or earlier), and 1 tells to look into
#                                 FG_SCENERY/Airports (for contemporary
#                                 FlightGear versions).
# AUTO_UPDATE_APT=boolean       - 0 or 1 (defaults to 1). Keep track of
#                                 changes to FlightGear's apt.dat files,
#                                 and rebuild FFGo's own airport database
#                                 automatically when it is needed.
# BASE_FONT_SIZE=size           - Font size in points. Should be in the range
#                                 from MIN_BASE_FONT_SIZE to MAX_BASE_FONT_SIZE
#                                 defined in ffgo/constants.py; or 0, which is
#                                 platform-dependent default size.
# FG_AIRCRAFT=path_list         - Path(s) to additional aircraft directories.
#                                 Multiple paths can be specified, separated by
#                                 a colon on Unix-like systems, a semicolon on
#                                 Windows.
# FG_BIN=path                   - Path to fgfs executable.
# FG_WORKING_DIR=path           - Use this option if you want to set different
#                                 than user's home folder as working directory
#                                 for FlightGear.
# FILTER_APT_LIST=boolean       - 0 or 1 (defaults to 0). Show only installed
#                                 airports in the airport list.
# LANG=lang_code                - Use short language code, e.g.: en, de, fr, es
#                                 FFGo will try to use system system language
#                                 if not set.
# MAGNETICFIELD_BIN=name_or_path
#                               - Name or path to GeographicLib's
#                                 'MagneticField' program. If a simple name is
#                                 used, the program will be searched
#                                 according to the PATH environment variable.
# WINDOW_GEOMETRY=widthxheight or widthxheight+x+y
#                               - Geometry of the main window. Use only if you
#                                 are not satisfied with default window size.
# SAVE_WINDOW_POSITION=boolean  - 0 or 1 (defaults to 1). If 0, then only the
#                                 size of the main window is saved in
#                                 WINDOW_GEOMETRY; otherwise, both its size
#                                 and the offsets from the screen borders are
#                                 saved.
# SHOW_FG_COMMAND=boolean       - 0 or 1 (defaults to 1). Show the arguments
#                                 that will be passed to fgfs, the FlightGear
#                                 executable.
# SHOW_FG_COMMAND_IN_SEPARATE_WINDOW=boolean
#                               - 0 or 1 (defaults to 0). If the arguments
#                                 that will be passed to fgfs are to be
#                                 displayed, do it in a separate window instead
#                                 of the main FFGo window.
# FG_COMMAND_GEOMETRY=widthxheight+x+y
#                               - Window geometry specification for the
#                                 Commmand Window. Set this only if you are not
#                                 satisfied with the default window geometry.
# SHOW_FG_OUTPUT=boolean        - 0 or 1 (defaults to 1). Show the output
#                                 (sdtout and stderr) of fgfs, the FlightGear
#                                 executable.
# SHOW_FG_OUTPUT_IN_SEPARATE_WINDOW=boolean
#                               - 0 or 1 (defaults to 0). If the fgfs output is
#                                 to be displayed, do it in a separate window
#                                 instead of the main FFGo window.
# FG_OUTPUT_GEOMETRY=widthxheight+x+y
#                               - Window geometry specification for the
#                                 Output Window. Set this only if you are not
#                                 satisfied with the default window geometry.
# AUTOSCROLL_FG_OUTPUT=boolean  - 0 or 1 (defaults to 1). Automatically scroll
#                                 the Output Window to the end whenever new
#                                 text is received from FlightGear's stdout or
#                                 stderr stream.
# FAKE_PARKPOS_OPTION=boolean   - 0 or 1 (defaults to 0). Automatically
#                                 translate the --parkpos option (that would
#                                 normally be passed to fgfs for parking
#                                 positions found in groundnet files) into
#                                 three --lat, --lon and --heading options.
# AIRPORT_STATS_SHOW_PERIOD=n (integer)
#                               - The "Use count" of each airport is the
#                                 number of days during which the airport has
#                                 been visited at least once, in the period
#                                 covering the last n days.
# AIRPORT_STATS_EXPIRY_PERIOD=p (integer)
#                               - To compute the aforementioned "use count",
#                                 the date for each airport visit is stored
#                                 (no more than once per day for a given
#                                 airport). However, dates older than p days
#                                 for any given airport are automatically
#                                 discarded.
# AIRCRAFT_STATS_SHOW_PERIOD=q (integer)
#                               - The "Use count" of each aircraft is the
#                                 number of days during which the aircraft has
#                                 been used at least once, in the period
#                                 covering the last q days.
# AIRCRAFT_STATS_EXPIRY_PERIOD=r (integer)
#                               - To compute the aforementioned "use count",
#                                 the date for each aircraft use is stored (no
#                                 more than once per day for a given
#                                 aircraft). However, dates older than r days
#                                 for any given aircraft are automatically
#                                 discarded.
# TIME_OF_DAY=string              Same values as for --timeofday in
#                                 FlightGear (default: the empty string,
#                                 meaning "don't pass the --timeofday option").
# SEASON=string                   Same values as for --season in FlightGear.
#                                 (default: the empty string, meaning "don't
#                                 pass the --season option").
# ENABLE_TERRASYNC=boolean        0 or 1 (defaults to 0). Whether to activate
#                                 automatic scenery download (TerraSync).
# ENABLE_REAL_WEATHER_FETCH=boolean
#                                 0 or 1 (defaults to 0). Whether to activate
#                                 automatic download of weather data (METAR).
# START_FG_FULL_SCREEN=boolean    0 or 1 (defaults to 1). Whether to start
#                                 FlightGear in full screen.
# START_FG_PAUSED=boolean         0 or 1 (defaults to 0). Whether to start
#                                 FlightGear paused.
# ENABLE_MULTI_SAMPLE_ANTIALIASING=boolean
#                                 0 or 1 (defaults to 0). Whether to enable
#                                 multi-sample anti-aliasing.
# ENABLE_REMBRANDT=boolean        0 or 1 (defaults to 0). Whether to enable
#                                 deferred rendering (the Rembrandt renderer).
#
# Any number of options can be selected, but to get FFGo ready to work,
# you only need:
# --fg-root=
# --fg-scenery=
# FG_BIN=
